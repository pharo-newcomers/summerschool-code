| package |package := RPackageOrganizer default packageNamed: 'Roassal3-Builders' ifAbsent: [ nil ].classes := package classes asArray.classesPalette := Dictionary new.palette := RSQualitativeColorPalette new flatui112.(1 to: (RSQualitativeColorPalette new flatui112) range size) do: [ :in | classesPalette add: (classes at: in) name -> (palette range at: in)].methods := classes flatCollect: [ :each | each methods ].shapes := methods 	collect: [ :m | | c originalColor |		c := RSCircle new model: m; 							size: 20; 							withBorder;							draggable;							yourself.		c @ (RSPopup new text: m name).		c color: (classesPalette at: c model methodClass name).		c when: RSMouseEnter do: [ :evt | 			originalColor := c color.			c color: Color red.			c outgoingShapes do: [ :sh | sh color: Color red ].			] for: c.		c when: RSMouseLeave do: [ :evt | c color: originalColor.			c outgoingShapes do: [ :sh | sh color: (classesPalette at: c model methodClass name)]			] for: c.			 ].canvas := RSCanvas new addAll: shapes shuffle; yourself.RSLineBuilder arrowedLine 	canvas: canvas;	withBorderAttachPoint;	fromShapes: shapes;	connectToAll: #senders.canvas edges do: [ :e | e color: e from color ].RSNormalizer size 	shapes: shapes;	from: 20; to: 200;	normalize: #numberOfLinesOfCode.RSCircleLayout on: canvas nodes.canvas @ RSZoomToFitCanvasInteraction.canvas @ RSZoomableCanvasInteraction.canvas