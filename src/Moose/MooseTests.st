TestCase subclass: #MyCheckerTest	instanceVariableNames: 'model checker'	classVariableNames: ''	package: 'SummerSchool-Tests'!!MyCheckerTest methodsFor: 'running' stamp: 'nour 9/4/2023 18:10'!setUp	super setUp.	model := FamixJavaModel new.	checker := MyChecker new model: model; yourself! !!MyCheckerTest methodsFor: 'running' stamp: 'nour 9/4/2023 18:13'!entity: aFamixEntity named: aString 	^ aFamixEntity new 		name: aString;		mooseModel: model ;		yourself! !!MyCheckerTest methodsFor: 'tests' stamp: 'nour 9/4/2023 20:18'!testComputeHierarchyDepth	| object root c11 c12 c21 c31 c32 i |	object := self entity: FamixJavaClass named: 'Object'.	root := self entity: FamixJavaClass named: 'MyRoot'.	c11 := self entity: FamixJavaClass named: 'Class11'.	c12 := self entity: FamixJavaClass named: 'Class12'.	c21 := self entity: FamixJavaClass named: 'Class21'.	c31 := self entity: FamixJavaClass named: 'Class31'.	c32 := self entity: FamixJavaClass named: 'Class32'.	i := FamixJavaInheritance new		     mooseModel: model;		     yourself.	i		superclass: object;		subclass: root.	root addSubInheritance: (self superclass: root subclass: c11).	root addSubInheritance: (self superclass: root subclass: c12).	c11 addSubInheritance: (self superclass: c11 subclass: c21).	c21 addSubInheritance: (self superclass: c21 subclass: c31).	c21 addSubInheritance: (self superclass: c21 subclass: c32).	self assert: (checker computeHierarchyDepth: root) equals: 3.	self assert: (checker computeHierarchyDepth: c21) equals: 3! !!MyCheckerTest methodsFor: 'tests' stamp: 'nour 9/4/2023 20:26'!testRegex 	! !!MyCheckerTest methodsFor: 'tests' stamp: 'nour 9/5/2023 11:07'!testIsOverloading	| overloading m1 m2 m3 |	overloading := self		               entity: FamixJavaClass		               named: 'OverloadingFactory'.	m1 := (self entity: FamixJavaMethod named: 'm1') parentType:		      overloading.	(self entity: FamixJavaParameter named: 'Paramm1') 		parentBehaviouralEntity: m1.	m2 := (self entity: FamixJavaMethod named: 'm1')		      parentType: overloading;		      yourself.	(self entity: FamixJavaParameter named: 'Paramm21') 		parentBehaviouralEntity: m2.	(self entity: FamixJavaParameter named: 'Paramm22') 		parentBehaviouralEntity: m2.	m3 := (self entity: FamixJavaMethod named: 'm1') parentType:		      overloading.	(self entity: FamixJavaParameter named: 'Paramm31') 		parentBehaviouralEntity: m3.	(self entity: FamixJavaParameter named: 'Paramm32') 		parentBehaviouralEntity: m3.	(self entity: FamixJavaParameter named: 'Paramm33') 		parentBehaviouralEntity: m3.	self assert: (checker isOverloading: overloading)! !!MyCheckerTest methodsFor: 'tests' stamp: 'nour 9/5/2023 11:54'!testIsNotBigClass	| class |	class := self entity: FamixJavaClass named: 'BigClass'.	class		addMethod: (self entity: FamixJavaMethod named: 'm1');		addMethod: (self entity: FamixJavaMethod named: 'm2');		addMethod: (self entity: FamixJavaMethod named: 'm3');		addMethod: (self entity: FamixJavaMethod named: 'm4').	self deny: (checker isBigClass: class)! !!MyCheckerTest methodsFor: 'tests' stamp: 'nour 9/5/2023 11:54'!testIsBigClass	| class |	class := self entity: FamixJavaClass named: 'BigClass'.	class		addMethod: (self entity: FamixJavaMethod named: 'm1');		addMethod: (self entity: FamixJavaMethod named: 'm2');		addMethod: (self entity: FamixJavaMethod named: 'm3');		addMethod: (self entity: FamixJavaMethod named: 'm4');		addMethod: (self entity: FamixJavaMethod named: 'm5');		addMethod: (self entity: FamixJavaMethod named: 'm6');		addMethod: (self entity: FamixJavaMethod named: 'm7');		addMethod: (self entity: FamixJavaMethod named: 'm8');		addMethod: (self entity: FamixJavaMethod named: 'm9');		addMethod: (self entity: FamixJavaMethod named: 'm10');		addMethod: (self entity: FamixJavaMethod named: 'm11');		addMethod: (self entity: FamixJavaMethod named: 'm12').	self assert: (checker isBigClass: class)! !!MyCheckerTest methodsFor: 'tests' stamp: 'nour 9/5/2023 13:55'!testRegexType	| object root c11 c12 c21 c31 c32 |	object := self entity: FamixJavaClass named: 'Object'.	root := self entity: FamixJavaClass named: 'MyRoot'.	c11 := self entity: FamixJavaClass named: 'Class11'.	c12 := self entity: FamixJavaClass named: 'Class12'.	c21 := self entity: FamixJavaClass named: 'Class21'.	c31 := self entity: FamixJavaClass named: 'Class31'.	c32 := self entity: FamixJavaClass named: 'Class32'.	self assert: (checker regexType: '.*2.*') size equals: 3! !!MyCheckerTest methodsFor: 'tests' stamp: 'nour 9/4/2023 19:56'!testRootOf	| object root c11 c12 c21 c31 c32 i |	object := self entity: FamixJavaClass named: 'Object'.	root := self entity: FamixJavaClass named: 'MyRoot'.	c11 := self entity: FamixJavaClass named: 'Class11'.	c12 := self entity: FamixJavaClass named: 'Class12'.	c21 := self entity: FamixJavaClass named: 'Class21'.	c31 := self entity: FamixJavaClass named: 'Class31'.	c32 := self entity: FamixJavaClass named: 'Class32'.	i := FamixJavaInheritance new		     mooseModel: model;		     yourself.	i		superclass: object;		subclass: root.	root addSubInheritance: (self superclass: root subclass: c11).	root addSubInheritance: (self superclass: root subclass: c12).	c11 addSubInheritance: (self superclass: c11 subclass: c21).	c21 addSubInheritance: (self superclass: c21 subclass: c31).	c21 addSubInheritance: (self superclass: c21 subclass: c32).	self assert: (checker rootOf: c32) equals: root.	self assert: (checker rootOf: root) equals: root.! !!MyCheckerTest methodsFor: 'tests' stamp: 'nour 9/4/2023 19:30'!testComputeClassDepth	| object root c11 c12 c21 c31 c32 i |	object := self entity: FamixJavaClass named: 'Object'.	root := self entity: FamixJavaClass named: 'MyRoot'.	c11 := self entity: FamixJavaClass named: 'Class11'.	c12 := self entity: FamixJavaClass named: 'Class12'.	c21 := self entity: FamixJavaClass named: 'Class21'.	c31 := self entity: FamixJavaClass named: 'Class31'.	c32 := self entity: FamixJavaClass named: 'Class32'.	i := FamixJavaInheritance new		     mooseModel: model;		     yourself.	i		superclass: object;		subclass: root.	root addSubInheritance: (self superclass: root subclass: c11).	root addSubInheritance: (self superclass: root subclass: c12).	c11 addSubInheritance: (self superclass: c11 subclass: c21).	c21 addSubInheritance: (self superclass: c21 subclass: c31).	c21 addSubInheritance: (self superclass: c21 subclass: c32).	self assert: (checker computeClassDepth: c32) equals: 3.	self deny: (checker computeClassDepth: c21) equals: 3.	self assert: (checker computeClassDepth: root) equals: 0! !!MyCheckerTest methodsFor: 'as yet unclassified' stamp: 'nour 9/4/2023 18:53'!superclass: superclass subclass: subclass 	^ FamixJavaInheritance new 		mooseModel: model;		superclass: superclass;		subclass: subclass;		yourself.! !